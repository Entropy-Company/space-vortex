using Content.Shared.Research.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;
using Robust.Client.Graphics;
using System;
using Robust.Shared.Input;

namespace Content.Client.Research.UI;

public enum ResearchAvailablity
{
    Researched,
    Available,
    Unavailable
}

[GenerateTypedNameReferences]
public sealed partial class MiniTechnologyCardControl : Control
{
    public readonly TechnologyPrototype Technology;

    public event Action? OnTileClicked;

    public MiniTechnologyCardControl(TechnologyPrototype technology, IPrototypeManager prototypeManager, SpriteSystem spriteSys, FormattedMessage description)
    {
        RobustXamlLoader.Load(this);
        Texture.Texture = spriteSys.Frame0(technology.Icon);

        Technology = technology;
        TileButton.OnPressed += _ => OnTileClicked?.Invoke();
    }

    public void SetAvailability(ResearchAvailablity availablity)
    {
        var style = (StyleBoxFlat)TilePanel.PanelOverride!;

        switch (availablity)
        {
            case ResearchAvailablity.Researched:
                {
                    style.BackgroundColor = Color.PaleGreen;
                    style.BorderColor = Color.LimeGreen;
                    break;
                }
            case ResearchAvailablity.Available:
                {
                    style.BackgroundColor = Color.DarkOliveGreen;
                    style.BorderColor = Color.LimeGreen;
                    break;
                }
            case ResearchAvailablity.Unavailable:
                {
                    style.BackgroundColor = Color.DarkRed;
                    style.BorderColor = Color.Crimson;
                    break;
                }
        }
    }
}
